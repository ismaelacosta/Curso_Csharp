Clases
    - Inician con mayusculas ClaseNueva

    Clase abstracta
    - Es un objeto que no existe en el mundo real.

Campos 
    - Variables privadas
        De preferencia inician con _nombreVariable

Propiedades 
    - Inician con mayusculas
    - Las propiedades son publicas
    - No dependen de ningun atributo


Metodos 
    - Los nombres tienen que ser lo m√°s explicativos posibles.
    - Sus nombres inician con mayusculas la primera palabra.


    Metodos booleanos 
        - Inician con el nombre IsNombreVariable.

    Metodo abstracto - cursiva
        - Solo se nombra pero se implementa despues.

Interfaces
    - Inician con la letra INombreInterfaz

Snippets 
    - ctor + tab = Constructor de clase
    - ctrl + . = Ayuda de vscode y visual studio
    - prop + tab

Interpolacion de strings 
    return $"{_year}/{_month:00}/{_day:00}";

Herencia 
    - Se utiliza :
    - Instanciar clase
        Employee e1 = new SalaryEmployee();

Interfaces
    - Se utiliza tambien :

Tipos de datos
    - decimal: termina en M (money)
    - float . termina en F 

Entity Framework
    - El ORM ya tiene las tablas: User, User Role, Role.

Data annotations
    - Se escriben con []

add-migration nombre
update-database
drop-database

Async
	- Devuelven una promesa, no espera 
Await
	- Espera una accion 


try catch

	- Un try puede tener varios catch
- evitar duplicidad de codigo 


//Formas de inyeccion 

/* \
 * 
 * Ciclo de vida
 1 . Transcient  - Ejecutarlo solo una vez 
 2. Scoope - la inyecta cada vez que la necesita y destruye cuando deja de utilizarse (mas comun)
 3. Singleton - se inyecta una vez y no lo destruye, lo deja en memoria
 
 */

Guid 

Codigo unico alphanumerico
Es casi imposible repetir el mismo codigo


//TODO para visual studio permite mostrar la lista de pendientes


TASK es el void de los metodos asincronos

yopmail - correo falso que es valido para realizar pruebas

